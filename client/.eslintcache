[{"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\index.js":"1","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\App.js":"2","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\reducers\\index.js":"3","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\Landing\\Landing.js":"4","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\Game\\Game.js":"5","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\User_Profile\\User_Profile.js":"6","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\reducers\\authReducer.js":"7","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Square\\Square.js":"8","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\ModalEditSquare\\ModalEditSquare.js":"9","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\actions\\index.js":"10","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\utils\\API.js":"11","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\utils\\statesPrimer.js":"12","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Modal\\Modal.js":"13","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\UserGameList\\UserGameList.js":"14","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Header\\Header.js":"15","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\actions\\types.js":"16"},{"size":470,"mtime":1610643769095,"results":"17","hashOfConfig":"18"},{"size":951,"mtime":1610678416145,"results":"19","hashOfConfig":"18"},{"size":146,"mtime":1610643769097,"results":"20","hashOfConfig":"18"},{"size":2625,"mtime":1611087095981,"results":"21","hashOfConfig":"18"},{"size":18651,"mtime":1611156062438,"results":"22","hashOfConfig":"18"},{"size":5316,"mtime":1611157724932,"results":"23","hashOfConfig":"18"},{"size":252,"mtime":1610643769097,"results":"24","hashOfConfig":"18"},{"size":2690,"mtime":1611156062437,"results":"25","hashOfConfig":"18"},{"size":2056,"mtime":1611065435755,"results":"26","hashOfConfig":"18"},{"size":235,"mtime":1610643769092,"results":"27","hashOfConfig":"18"},{"size":742,"mtime":1611074802684,"results":"28","hashOfConfig":"18"},{"size":2828,"mtime":1611111087217,"results":"29","hashOfConfig":"18"},{"size":558,"mtime":1610833045201,"results":"30","hashOfConfig":"18"},{"size":843,"mtime":1611074802682,"results":"31","hashOfConfig":"18"},{"size":1208,"mtime":1610678416146,"results":"32","hashOfConfig":"18"},{"size":41,"mtime":1610643769092,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"9wa4l5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\index.js",[],["72","73"],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\App.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\reducers\\index.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\Landing\\Landing.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\Game\\Game.js",["74","75","76","77","78"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Square from \"../../components/Square/Square.js\";\r\nimport API from \"../../utils/API\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { preSetSquares } from \"../../utils/statesPrimer\";\r\nimport Header from '../../components/Header/Header';\r\nimport ModalEditSquare from '../../components/ModalEditSquare/ModalEditSquare.js';\r\nimport \"./Game.css\"\r\n\r\nconsole.log('file read')\r\n\r\nlet socket;\r\nlet pendingSquares = [];\r\n\r\nconst Game = (props) => {\r\n\r\n    const [modalAdmin, setModalAdmin] = useState(false);\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [game, setGame] = useState({});\r\n    const [squares, setSquares] = useState(preSetSquares);\r\n    const [editSquareName, setSquareName] = useState(\"\");\r\n    const [squareId, setSquareId] = useState(\"\");\r\n    const [modalColor, setModalColor] = useState(\"\");\r\n    const [modalButtonColor, setModalButtonColor] = useState(\"\");\r\n    const [modalSquareCounter, setModalSquareCounter] = useState(\"\");\r\n    const [modalOptionValue, setModalOptionValue] = useState(\"\");\r\n    // const [finish, setFinish] = useState(true);\r\n    const [xArray, setXarray] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n    const [yArray, setYarray] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n    const [blackNumbers, setBlackNumbers] = useState(true)\r\n\r\n    let flip = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\r\n\r\n    const [flipStatus, setFlipStatus] = useState(flip);\r\n    const rowLength = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n    useEffect(() => {\r\n        socket = socketIOClient();\r\n        socket.on(props.match.params.id, (game) => {\r\n            setGame(game)\r\n            setSquares(game.squares)\r\n            let finish = true\r\n            for (let i = 0; i < game.squares.length; i++) {\r\n                if (game.squares[i].active === true) {\r\n                    console.log(\"match\")\r\n                    finish = false\r\n                    break;\r\n                }\r\n            }\r\n            if (finish) {\r\n                setXarray(game.xArray);\r\n                setYarray(game.yArray);\r\n            } else {\r\n                setXarray([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n                setYarray([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n            }\r\n\r\n        });\r\n\r\n        API.getGame(props.match.params.id).then((game) => {\r\n            if (game.data !== \"\") {\r\n                setGame(game.data)\r\n                setSquares(game.data.squares)\r\n                let finish = true\r\n                for (let i = 0; i < game.data.squares.length; i++) {\r\n                    if (game.data.squares[i].active === true) {\r\n                        console.log(\"match\")\r\n                        finish = false\r\n                        return;\r\n                    }\r\n                }\r\n                if (finish) {\r\n                    setXarray(game.data.xArray);\r\n                    setYarray(game.data.yArray);\r\n                } else {\r\n                    setXarray([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n                    setYarray([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n                }\r\n                if (props.auth) {\r\n                    adminCheck(game.data);\r\n                }\r\n            } else {\r\n                window.location.href = \"/\"\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            pendingSquares = [];\r\n            socket.disconnect()\r\n        };\r\n    }, [props.auth]);\r\n\r\n    const flipFunction = (event) => {\r\n        let chosenSquare = event.target.id\r\n        let chosenAlready = false;\r\n\r\n        //delete from array on second click\r\n        for (var i = 0; i < pendingSquares.length; i++) {\r\n            if (pendingSquares[i] == chosenSquare) {\r\n                chosenAlready = true\r\n                pendingSquares.splice(i, 1)\r\n            }\r\n        }\r\n\r\n        //add to array on first click\r\n        if (chosenAlready == false) {\r\n            pendingSquares.push(chosenSquare)\r\n        }\r\n        for (let i = 0; i < pendingSquares.length; i++) {\r\n            flip[pendingSquares[i]] = !flip[pendingSquares[i]]\r\n        }\r\n        setFlipStatus(flip);\r\n    }\r\n\r\n    const updateGame = async () => {\r\n        try {\r\n            await API.updateGame(props.match.params.id, { pendingSquares: pendingSquares, firstName: firstName, lastName: lastName });\r\n            socket.emit('getUpdatedGame', props.match.params.id);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const adminCheck = (game) => {\r\n        if (props.auth._id === game.ownerId) {\r\n            console.log(\"Hello Admin\")\r\n            setModalAdmin(true)\r\n        }\r\n    }\r\n\r\n    const adminEdit = (event) => {\r\n        let choice = event.target.id;\r\n        let colorIndex = squares[choice].color.indexOf(\" \");\r\n        let colorBody = squares[choice].color.slice(0, colorIndex);\r\n        let colorButton = \"btn shadow-lg \" + colorBody;\r\n        colorBody = \"modal-body \" + colorBody;\r\n        let a = 0;\r\n        for (let i = 0; i < squares.length; i++) {\r\n            if (squares[i].name === squares[choice].name) {\r\n                a++\r\n            }\r\n        }\r\n        setModalSquareCounter(a);\r\n        setModalButtonColor(colorButton);\r\n        setModalColor(colorBody);\r\n        setSquareId(choice);\r\n        setSquareName(squares[choice].name)\r\n    }\r\n\r\n    const handleChangeModal = (event) => {\r\n        setModalOptionValue(event.target.value)\r\n    }\r\n\r\n    const modalSubmitButton = async () => {\r\n        if (modalOptionValue === \"Delete\") {\r\n            try {\r\n                await API.updateSquare(props.match.params.id, { id: squareId });\r\n                socket.emit('getUpdatedGame', props.match.params.id);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        if (modalOptionValue === \"Delete All\") {\r\n            try {\r\n                await API.deleteParticipant(props.match.params.id, editSquareName);\r\n                socket.emit('getUpdatedGame', props.match.params.id);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"text-white justify-content-center game-square\">\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-3 col-md-4\">\r\n                    </div>\r\n                    <div className=\"col-7 col-md-5 text-center\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 col-md-4 pr-1\">\r\n                                <input type=\"name\" className=\"input-name\" placeholder=\"first\" value={firstName} onChange={(event) => { setFirstName(event.target.value) }}></input>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-4 pr-1\">\r\n                                <input type=\"name\" className=\"input-name\" placeholder=\"last\" value={lastName} onChange={(event) => { setLastName(event.target.value) }}></input>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-4 input-button\">\r\n                                <button disabled={!(firstName && lastName)} onClick={updateGame} type=\"button\" className=\"btn btn-outline-danger btn-submit\">submit</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-2 col-md-2\"></div>\r\n                </div>\r\n                {/* <div className=\"row mb-5\">\r\n                    <div className=\"col-12\">\r\n                        <div>\r\n                            <h5 id=\"h0\" className=\"h-numbers\">{xArray[0]}</h5><h5 id=\"h1\" className=\"h-numbers\" >{xArray[1]}</h5>\r\n                            <h5 id=\"h2\" className=\"h-numbers\">{xArray[2]}</h5><h5 id=\"h3\" className=\"h-numbers\">{xArray[3]}</h5>\r\n                            <h5 id=\"h4\" className=\"h-numbers\">{xArray[4]}</h5><h5 id=\"h5\" className=\"h-numbers\">{xArray[5]}</h5>\r\n                            <h5 id=\"h6\" className=\"h-numbers\">{xArray[6]}</h5><h5 id=\"h7\" className=\"h-numbers\">{xArray[7]}</h5>\r\n                            <h5 id=\"h8\" className=\"h-numbers\">{xArray[8]}</h5><h5 id=\"h9\" className=\"h-numbers\">{xArray[9]}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"row\">\r\n                    <div className=\"col-2 col-md-3 justify-content-right\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-10\">\r\n                            </div>\r\n                            <div className=\"col-2 mt-5\">\r\n                                <div>\r\n                                    \r\n                                    <h2 className=\"text-right y-row\">{yArray[0]}</h2>\r\n                                    <h2 className=\"text-right y-row\">{yArray[1]}</h2>\r\n                                    <h2 className=\"text-right y-row\">{yArray[2]}</h2>\r\n                                    <h2 className=\"text-right y-row\">{yArray[3]}</h2>\r\n                                    <h2 className=\"text-right y-row\">{yArray[4]}</h2>\r\n                                    <h2 className=\"text-right y-row\">{yArray[5]}</h2>\r\n                                    <h2 className=\"text-right y-row\">{yArray[6]}</h2>\r\n                                    <h2 className=\"text-right y-row\">{yArray[7]}</h2>\r\n                                    <h2 className=\"text-right y-row\">{yArray[8]}</h2>\r\n                                    <h2 className=\"text-right y-row\">{yArray[9]}</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-10 col-md-8\">\r\n\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i}>\r\n                                    <Square squareId=\"1-2\" id={i} blackNumbers={blackNumbers} adminEdit={adminEdit} color={squares[i].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i]} active={squares[i].active}>\r\n                                        {xArray[i]}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            {/* <div className=\"col-1\" key={0}>\r\n                                <Square squareId=\"1-2\" id={0} blackNumbers={blackNumbers} adminEdit={adminEdit} color={squares[0].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[0]} active={squares[0].active}>\r\n                                    {xArray[0]}\r\n                                </Square>\r\n                            </div> */}\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i}>\r\n                                    <Square squareId=\"1-2\" id={i} adminEdit={adminEdit} color={squares[i].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i]} active={squares[i].active}>\r\n                                        {squares[i].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i + 10}>\r\n                                    <Square squareId=\"1-2\" id={i + 10} adminEdit={adminEdit} color={squares[i + 10].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i + 10]} active={squares[i + 10].active}>\r\n                                        {squares[i + 10].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i + 20}>\r\n                                    <Square squareId=\"1-2\" id={i + 20} adminEdit={adminEdit} color={squares[i + 20].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i + 20]} active={squares[i + 20].active}>\r\n                                        {squares[i + 20].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i + 30}>\r\n                                    <Square squareId=\"1-2\" id={i + 30} adminEdit={adminEdit} color={squares[i + 30].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i + 30]} active={squares[i + 30].active}>\r\n                                        {squares[i + 30].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i + 40}>\r\n                                    <Square squareId=\"1-2\" id={i + 40} adminEdit={adminEdit} color={squares[i + 40].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i + 40]} active={squares[i + 40].active}>\r\n                                        {squares[i + 40].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i + 50}>\r\n                                    <Square squareId=\"1-2\" id={i + 50} adminEdit={adminEdit} color={squares[i + 50].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i + 50]} active={squares[i + 50].active}>\r\n                                        {squares[i + 50].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i + 60}>\r\n                                    <Square squareId=\"1-2\" id={i + 60} adminEdit={adminEdit} color={squares[i + 60].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i + 60]} active={squares[i + 60].active}>\r\n                                        {squares[i + 60].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i + 70}>\r\n                                    <Square squareId=\"1-2\" id={i + 70} adminEdit={adminEdit} color={squares[i + 70].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i + 70]} active={squares[i + 70].active}>\r\n                                        {squares[i + 70].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i + 80}>\r\n                                    <Square squareId=\"1-2\" id={i + 80} adminEdit={adminEdit} color={squares[i + 80].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i + 80]} active={squares[i + 80].active}>\r\n                                        {squares[i + 80].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {rowLength.map((user, i) => (\r\n                                <div className=\"col-1\" key={i + 90}>\r\n                                    <Square squareId=\"1-2\" id={i + 90} adminEdit={adminEdit} color={squares[i + 90].color} modalAdmin={modalAdmin} flipFunciton={flipFunction} isFlipped={flipStatus[i + 90]} active={squares[i + 90].active}>\r\n                                        {squares[i + 90].initials}\r\n                                    </Square>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-1 bg-danger\"></div>\r\n                <ModalEditSquare modalAdmin={modalAdmin} squareId={squareId} editSquareName={editSquareName} modalColor={modalColor} modalButtonColor={modalButtonColor} modalSquareCounter={modalSquareCounter} handleChangeModal={handleChangeModal} modalOptionValue={modalOptionValue} modalSubmitButton={modalSubmitButton}></ModalEditSquare>\r\n                {/* container end div */}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps({ auth }) {\r\n    return { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Game);","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\User_Profile\\User_Profile.js",["79","80"],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\reducers\\authReducer.js",["81"],"import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function (state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Square\\Square.js",["82","83","84","85","86","87"],"import React, { useEffect, useState } from \"react\";\r\nimport ReactCardFlip from 'react-card-flip'\r\nimport \"./Square.css\"\r\n\r\nconst Square = (props) => {\r\n\r\n    if (props.blackNumbers) {\r\n\r\n        return (\r\n            <>\r\n                <ReactCardFlip isFlipped={false} flipDirection=\"horizontal\" flipSpeedFrontToBack=\"1.5\" flipSpeedFrontToBack=\"1.5\">\r\n                    <div style={{backgroundColor:\"#1A1A1D\", border:\"none\"}} className=\"text-center cardDimensions\" id={props.id} data-value={props.data} onClick={props.flipFunciton}>\r\n                        {props.children}\r\n                    </div>\r\n\r\n                    <div style={{backgroundColor:\"#1A1A1D\"}} className=\"text-center justify-content-center cardDimensions\" id={props.id} data-value={props.data} onClick={props.flipFunciton}>\r\n                    {props.children}\r\n                    </div>\r\n                </ReactCardFlip>\r\n            </>\r\n        )\r\n    } \r\n    if (props.active) {\r\n\r\n        return (\r\n            <>\r\n                <ReactCardFlip isFlipped={props.isFlipped} flipDirection=\"horizontal\" flipSpeedFrontToBack=\"1.5\" flipSpeedFrontToBack=\"1.5\">\r\n                    <div className=\"bg-warning text-center cardDimensions\" id={props.id} data-value={props.data} onClick={props.flipFunciton}>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"bg-info text-center justify-content-center cardDimensions\" id={props.id} data-value={props.data} onClick={props.flipFunciton}>\r\n\r\n                    </div>\r\n                </ReactCardFlip>\r\n            </>\r\n        )\r\n    } \r\n    if(props.modalAdmin){\r\n       return( <ReactCardFlip   isFlipped={false} flipDirection=\"horizontal\" flipSpeedFrontToBack=\"1.5\" flipSpeedFrontToBack=\"1.5\" onClick={props}>\r\n                <div onClick={props.adminEdit} data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" data-bs-keyboard=\"false\" className={props.color} id={props.id}>\r\n                    {props.children}\r\n                </div>\r\n                <div className=\"bg-info text-center justify-content-center\" id={props.id}>\r\n                    {props.name}\r\n                </div>\r\n            </ReactCardFlip>\r\n       )\r\n    }\r\n        return (\r\n\r\n            <ReactCardFlip   isFlipped={false} flipDirection=\"horizontal\" flipSpeedFrontToBack=\"1.5\" flipSpeedFrontToBack=\"1.5\" onClick={props}>\r\n                <div className={props.color} id={props.id}>\r\n                    {props.children}\r\n                </div>\r\n                <div className=\"bg-info text-center justify-content-center\" id={props.id}>\r\n                    {props.name}\r\n                </div>\r\n            </ReactCardFlip>\r\n        )\r\n\r\n}\r\n\r\nexport default Square;","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\ModalEditSquare\\ModalEditSquare.js",["88","89"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./ModalEditSquare.css\"\r\n\r\nconst ModalEditSquare = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"modal fade  mod\" data-backdrop=\"false\" id=\"exampleModal\" data-bs-backdrop=\"static\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" onClick={props.adminCheck}>\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header justify-content-center\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Square {props.squareId}</h5>\r\n                        </div>\r\n                        <div className={props.modalColor} style={{ fontSize: \"20px\" }}>\r\n                            Name: {props.editSquareName}\r\n                            <br></br>\r\n                            Number of Squares: {props.modalSquareCounter}\r\n                            <br></br>\r\n\r\n                            <select className=\"bg-black text-white\" value={props.modalOptionValue} onChange={props.handleChangeModal} style={{fontSize: \"12px\"}}>\r\n                                <option className=\"bg-black text-white\" value=\"0\">Choose...</option>\r\n                                <option className=\"bg-black text-white\" value=\"Delete\">Delete</option>\r\n                                <option className=\"bg-black text-white\" value=\"Delete All\">Delete All</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                        <div className=\"modal-footer bg-foot\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className={props.modalButtonColor} onClick={props.modalSubmitButton} data-bs-dismiss=\"modal\">Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ModalEditSquare;","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\actions\\index.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\utils\\API.js",["90"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  getGames: function() {\r\n    return axios.get(\"/api/games/\");\r\n  },\r\n  getGame: function(id) {\r\n    return axios.get(\"/api/game/\" + id);\r\n  },\r\n  deleteGame: function(id) {\r\n    return axios.delete(\"/api/game/\" + id);\r\n  },\r\n  createGame: function(data){\r\n    return axios.post(\"/api/game/create\", data);\r\n  },\r\n  updateGame: function(id,data){\r\n    return axios.put(\"/api/game/\" + id, data);\r\n  },\r\n  getUserGames: function(userId) {\r\n    return axios.get(\"/api/games/\" + userId);\r\n  },\r\n  updateSquare: function(id, data) {\r\n    return axios.put(\"/api/square/\" + id, data);\r\n  },\r\n  deleteParticipant: function(id,name){\r\n    return axios.delete(\"/api/square/\" + id + \"/\"+ name)\r\n  }\r\n\r\n\r\n};","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\utils\\statesPrimer.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\UserGameList\\UserGameList.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\actions\\types.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":21,"column":12,"nodeType":"97","messageId":"98","endLine":21,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":32,"column":26,"nodeType":"97","messageId":"98","endLine":32,"endColumn":41},{"ruleId":"100","severity":1,"message":"101","line":93,"column":8,"nodeType":"102","endLine":93,"endColumn":20,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":101,"column":35,"nodeType":"106","messageId":"107","endLine":101,"endColumn":37},{"ruleId":"104","severity":1,"message":"105","line":108,"column":27,"nodeType":"106","messageId":"107","endLine":108,"endColumn":29},{"ruleId":"95","severity":1,"message":"108","line":18,"column":12,"nodeType":"97","messageId":"98","endLine":18,"endColumn":23},{"ruleId":"100","severity":1,"message":"109","line":22,"column":8,"nodeType":"102","endLine":22,"endColumn":20,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":1,"nodeType":"113","endLine":10,"endColumn":2},{"ruleId":"95","severity":1,"message":"114","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"115","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"117","line":11,"column":104,"nodeType":"118","endLine":11,"endColumn":130},{"ruleId":"116","severity":1,"message":"117","line":27,"column":114,"nodeType":"118","endLine":27,"endColumn":140},{"ruleId":"116","severity":1,"message":"117","line":40,"column":105,"nodeType":"118","endLine":40,"endColumn":131},{"ruleId":"116","severity":1,"message":"117","line":52,"column":102,"nodeType":"118","endLine":52,"endColumn":128},{"ruleId":"95","severity":1,"message":"114","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"115","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"119","line":3,"column":1,"nodeType":"113","endLine":30,"endColumn":3},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'game' is assigned a value but never used.","Identifier","unusedVar","'setBlackNumbers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adminCheck' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["122"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'paymentInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserGames'. Either include it or remove the dependency array.",["123"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [adminCheck, props.auth, props.match.params.id]",{"range":"128","text":"129"},"Update the dependencies array to be: [getUserGames, props.auth]",{"range":"130","text":"131"},[4214,4226],"[adminCheck, props.auth, props.match.params.id]",[933,945],"[getUserGames, props.auth]"]