[{"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\index.js":"1","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\App.js":"2","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\reducers\\index.js":"3","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\User_Profile\\User_Profile.js":"4","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\Landing\\Landing.js":"5","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\Game\\Game.js":"6","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\reducers\\authReducer.js":"7","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\actions\\index.js":"8","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Header\\Header.js":"9","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\utils\\API.js":"10","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Square\\Square.js":"11","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\UserGameList\\UserGameList.js":"12","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\utils\\statesPrimer.js":"13","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\actions\\types.js":"14"},{"size":470,"mtime":1610643769095,"results":"15","hashOfConfig":"16"},{"size":951,"mtime":1610678416145,"results":"17","hashOfConfig":"16"},{"size":146,"mtime":1610643769097,"results":"18","hashOfConfig":"16"},{"size":1720,"mtime":1610761927535,"results":"19","hashOfConfig":"16"},{"size":1742,"mtime":1610761113639,"results":"20","hashOfConfig":"16"},{"size":12036,"mtime":1610723974025,"results":"21","hashOfConfig":"16"},{"size":252,"mtime":1610643769097,"results":"22","hashOfConfig":"16"},{"size":235,"mtime":1610643769092,"results":"23","hashOfConfig":"16"},{"size":1208,"mtime":1610678416146,"results":"24","hashOfConfig":"16"},{"size":541,"mtime":1610672605876,"results":"25","hashOfConfig":"16"},{"size":1347,"mtime":1610723974023,"results":"26","hashOfConfig":"16"},{"size":682,"mtime":1610736468291,"results":"27","hashOfConfig":"16"},{"size":2828,"mtime":1610672605876,"results":"28","hashOfConfig":"16"},{"size":41,"mtime":1610643769092,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"9wa4l5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\index.js",[],["63","64"],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\App.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\reducers\\index.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\User_Profile\\User_Profile.js",["65"],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\Landing\\Landing.js",["66"],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\pages\\Game\\Game.js",["67","68","69","70"],"import React, { useEffect, useState } from \"react\";\r\nimport Square from \"../../components/Square/Square.js\";\r\nimport API from \"../../utils/API\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport {preSetSquares} from \"../../utils/statesPrimer\";\r\nimport Header from '../../components/Header/Header';\r\nimport \"./Game.css\"\r\n\r\n\r\n\r\nlet socket;\r\nlet pendingSquares = [];\r\n\r\nconst Game = (props) => {\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [game, setGame] = useState({});\r\n    const [squares, setSquares] = useState(preSetSquares);\r\n\r\n    let flip = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\r\n\r\n    const [flipStatus, setFlipStatus] = useState(flip);\r\n    const rowLength = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n    useEffect(() => {\r\n        socket = socketIOClient();\r\n        socket.on(props.match.params.id, (game) => {\r\n            console.log(game)\r\n            setGame(game)\r\n            setSquares(game.squares)\r\n        });\r\n\r\n        API.getGame(props.match.params.id).then((game) => {\r\n            if (game.data !== \"\") {\r\n                console.log(game)\r\n                setGame(game.data)\r\n                setSquares(game.data.squares)\r\n            } else {\r\n                window.location.href = \"/\"\r\n            }\r\n        })\r\n\r\n\r\n        return () => {\r\n            pendingSquares = [];\r\n            socket.disconnect()};\r\n    }, []);\r\n\r\n\r\n    const flipFunction = (event) => {\r\n        let chosenSquare = event.target.id\r\n        let chosenAlready = false;\r\n\r\n        //delete from array on second click\r\n        for (var i = 0; i < pendingSquares.length; i++) {\r\n            if (pendingSquares[i] == chosenSquare) {\r\n                chosenAlready = true\r\n                pendingSquares.splice(i, 1)\r\n            }\r\n        }\r\n\r\n        //add to array on first click\r\n        if (chosenAlready == false) {\r\n            pendingSquares.push(chosenSquare)\r\n        }\r\n        for (let i = 0; i < pendingSquares.length; i++) {\r\n            flip[pendingSquares[i]] = !flip[pendingSquares[i]]\r\n        }\r\n        setFlipStatus(flip);\r\n    }\r\n\r\n    const updateGame = async () => {\r\n        try {\r\n            await API.updateGame(props.match.params.id, { pendingSquares: pendingSquares, firstName: firstName, lastName: lastName });\r\n            socket.emit('getUpdatedGame', props.match.params.id);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n        return (\r\n            <>\r\n                <Header />\r\n                <div className=\"text-white justify-content-center game-square\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 col-md-4\">\r\n                        </div>\r\n                        <div className=\"col-7 col-md-4 text-center\">\r\n                            <input type=\"name\"  style={{display:\"inline-block\", backgroundColor:\"white\"}} placeholder=\"first\" value={firstName} onChange={(event) => { setFirstName(event.target.value) }}></input>\r\n                            <input type=\"name\"  style={{display:\"inline-block\", backgroundColor:\"white\"}} placeholder=\"last\" value={lastName} onChange={(event) => { setLastName(event.target.value) }}></input>\r\n                            <button disabled={!(firstName && lastName)} onClick={updateGame} type=\"button\" className=\"btn btn-outline-danger mb-2\">submit</button>\r\n                        </div>\r\n                        <div className=\"col-2 col-md-4\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2 col-md-3 justify-content-right\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-10\">\r\n                                </div>\r\n                                <div className=\"col-2 mt-5\">\r\n                                    <h2 className=\"text-right y-row\">0</h2>\r\n                                    <h2 className=\"text-right y-row\">1</h2>\r\n                                    <h2 className=\"text-right y-row\">2</h2>\r\n                                    <h2 className=\"text-right y-row\">3</h2>\r\n                                    <h2 className=\"text-right y-row\">4</h2>\r\n                                    <h2 className=\"text-right y-row\">5</h2>\r\n                                    <h2 className=\"text-right y-row\">6</h2>\r\n                                    <h2 className=\"text-right y-row\">7</h2>\r\n                                    <h2 className=\"text-right y-row\">8</h2>\r\n                                    <h2 className=\"text-right y-row\">9</h2>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-10 col-md-8\">\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i}>\r\n                                        <h2 className=\"text-center\">{i}</h2>\r\n                                        <Square squareId=\"1-2\" id={i} color={squares[i].color} flipFunciton={flipFunction} isFlipped={flipStatus[i]} active={squares[i].active}>\r\n                                            {squares[i].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i + 10}>\r\n                                        <Square squareId=\"1-2\" id={i + 10} color={squares[i + 10].color} flipFunciton={flipFunction} isFlipped={flipStatus[i + 10]} active={squares[i + 10].active}>\r\n                                            {squares[i + 10].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i + 20}>\r\n                                        <Square squareId=\"1-2\" id={i + 20} color={squares[i + 20].color} flipFunciton={flipFunction} isFlipped={flipStatus[i + 20]} active={squares[i + 20].active}>\r\n                                            {squares[i + 20].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i + 30}>\r\n                                        <Square squareId=\"1-2\" id={i + 30} color={squares[i + 30].color} flipFunciton={flipFunction} isFlipped={flipStatus[i + 30]} active={squares[i + 30].active}>\r\n                                            {squares[i + 30].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i + 40}>\r\n                                        <Square squareId=\"1-2\" id={i + 40} color={squares[i + 40].color} flipFunciton={flipFunction} isFlipped={flipStatus[i + 40]} active={squares[i + 40].active}>\r\n                                            {squares[i + 40].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i + 50}>\r\n                                        <Square squareId=\"1-2\" id={i + 50} color={squares[i + 50].color} flipFunciton={flipFunction} isFlipped={flipStatus[i + 50]} active={squares[i + 50].active}>\r\n                                            {squares[i + 50].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i + 60}>\r\n                                        <Square squareId=\"1-2\" id={i + 60} color={squares[i + 60].color} flipFunciton={flipFunction} isFlipped={flipStatus[i + 60]} active={squares[i + 60].active}>\r\n                                            {squares[i + 60].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i + 70}>\r\n                                        <Square squareId=\"1-2\" id={i + 70} color={squares[i + 70].color} flipFunciton={flipFunction} isFlipped={flipStatus[i + 70]} active={squares[i + 70].active}>\r\n                                            {squares[i + 70].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i + 80}>\r\n                                        <Square squareId=\"1-2\" id={i + 80} color={squares[i + 80].color} flipFunciton={flipFunction} isFlipped={flipStatus[i + 80]} active={squares[i + 80].active}>\r\n                                            {squares[i + 80].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {rowLength.map((user, i) => (\r\n                                    <div className=\"col-1\" key={i + 90}>\r\n                                        <Square squareId=\"1-2\" id={i + 90} color={squares[i + 90].color} flipFunciton={flipFunction} isFlipped={flipStatus[i + 90]} active={squares[i + 90].active}>\r\n                                            {squares[i + 90].initials}\r\n                                        </Square>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-1 bg-danger\"></div>\r\n                    {/* container end div */}\r\n                </div>\r\n\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n\r\nexport default Game;","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\reducers\\authReducer.js",["71"],"import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function (state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\actions\\index.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\utils\\API.js",["72"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  getGames: function() {\r\n    return axios.get(\"/api/games/\");\r\n  },\r\n  getGame: function(id) {\r\n    return axios.get(\"/api/game/\" + id);\r\n  }\r\n  ,deleteGame: function(id) {\r\n    return axios.delete(\"/api/game/\" + id);\r\n  },\r\n  createGame: function(data){\r\n    return axios.post(\"/api/game/create\", data);\r\n  },\r\n  updateGame: function(id,data){\r\n    return axios.put(\"/api/game/\" + id, data);\r\n  },\r\n  getUserGames: function(userId) {\r\n    return axios.get(\"/api/games/\" + userId);\r\n  }\r\n\r\n};","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\Square\\Square.js",["73","74","75","76"],"import React, { useEffect, useState } from \"react\";\r\nimport ReactCardFlip from 'react-card-flip'\r\nimport \"./Square.css\"\r\n\r\nconst Square = (props) => {\r\n\r\n    if (props.active) {\r\n\r\n        return (\r\n            <>\r\n                <ReactCardFlip isFlipped={props.isFlipped} flipDirection=\"horizontal\" flipSpeedFrontToBack=\"1.5\" flipSpeedFrontToBack=\"1.5\">\r\n                    <div className=\"bg-warning text-center cardDimensions\" id={props.id} data-value={props.data} onClick={props.flipFunciton}>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"bg-info text-center justify-content-center cardDimensions\" id={props.id} data-value={props.data} onClick={props.flipFunciton}>\r\n                        \r\n                    </div>\r\n                </ReactCardFlip>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n\r\n            <ReactCardFlip isFlipped={false} flipDirection=\"horizontal\" flipSpeedFrontToBack=\"1.5\" flipSpeedFrontToBack=\"1.5\">\r\n                <div className={props.color} id={props.id}>\r\n                    {props.children}\r\n                </div>\r\n                <div className=\"bg-info text-center justify-content-center\" id={props.id}>\r\n                    {props.name}\r\n                </div>\r\n            </ReactCardFlip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Square;","C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\components\\UserGameList\\UserGameList.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\utils\\statesPrimer.js",[],"C:\\Users\\young\\Desktop\\sbSquares\\client\\src\\actions\\types.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":13,"column":8,"nodeType":"83","endLine":13,"endColumn":20,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":21,"column":11,"nodeType":"87","messageId":"88","endLine":21,"endColumn":27},{"ruleId":"85","severity":1,"message":"89","line":18,"column":12,"nodeType":"87","messageId":"88","endLine":18,"endColumn":16},{"ruleId":"81","severity":1,"message":"90","line":48,"column":8,"nodeType":"83","endLine":48,"endColumn":10,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":57,"column":35,"nodeType":"94","messageId":"95","endLine":57,"endColumn":37},{"ruleId":"92","severity":1,"message":"93","line":64,"column":27,"nodeType":"94","messageId":"95","endLine":64,"endColumn":29},{"ruleId":"96","severity":1,"message":"97","line":3,"column":1,"nodeType":"98","endLine":10,"endColumn":2},{"ruleId":"96","severity":1,"message":"99","line":3,"column":1,"nodeType":"98","endLine":23,"endColumn":3},{"ruleId":"85","severity":1,"message":"100","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"101","line":1,"column":28,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"103","line":11,"column":114,"nodeType":"104","endLine":11,"endColumn":140},{"ruleId":"102","severity":1,"message":"103","line":25,"column":100,"nodeType":"104","endLine":25,"endColumn":126},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserGames'. Either include it or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'handleFormSubmit' is assigned a value but never used.","Identifier","unusedVar","'game' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["108"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","'useEffect' is defined but never used.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [getUserGames, props.auth]",{"range":"113","text":"114"},"Update the dependencies array to be: [props.match.params.id]",{"range":"115","text":"116"},[431,443],"[getUserGames, props.auth]",[2083,2085],"[props.match.params.id]"]